export async function distanceCalculator(
  lat1: number,
  lon1: number,
  lat2: number,
  lon2: number
): Promise<number> {
  var R = 6371; // km (change this constant to get miles)
  var dLat = ((lat2 - lat1) * Math.PI) / 180;
  var dLon = ((lon2 - lon1) * Math.PI) / 180;
  var a =
    Math.sin(dLat / 2) * Math.sin(dLat / 2) +
    Math.cos((lat1 * Math.PI) / 180) *
      Math.cos((lat2 * Math.PI) / 180) *
      Math.sin(dLon / 2) *
      Math.sin(dLon / 2);
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
  var d = R * c * 1000; // converting to meters

  return d;
}




//var loader = require("csv-load-sync");
//var school_radius = 2000;
//var bus_radius = 200;
//var userAddress = "330 Philip street Waterloo";

export async function main() {
  const address = encodeURIComponent(userAddress);
  const latAndLng1: { lat: number; lng: number } = await coordinateCalculator(
    address,
    0
  );

  var lat1 = latAndLng1.lat;
  var lng1 = latAndLng1.lng;
  function split(line: any, lineNumber: number) {
    if (lineNumber === 0) {
      return line.split(",");
    }

    var parts = line.split(",");
    return [
      parts[0],
      parts[1],
      parts[2] + "," + parts[3],
      parts[4],
      parts[5],
      parts[6],
      parts[7],
      parts[8],
    ];
  }
  var results = loader("School_Data.csv", {
    getColumns: split,
  });

  for (var i = 0; i < results.length - 1; i++) {
    var lat2 = results[i].latitude;
    var lng2 = results[i].longitude;
    const school_distance: number = await distanceCalculator(
      lat1,
      lng1,
      lat2,
      lng2
    );
  }

  var GRT_stops = loader("GRT_Stops.csv");
  for (var i = 0; i < GRT_stops.length - 1; i++) {
    var lat2 = GRT_stops[i].stop_lat;
    var lng2 = GRT_stops[i].stop_lon;
    const bus_distance: number = await distanceCalculator(
      lat1,
      lng1,
      lat2,
      lng2
    );
  }
}